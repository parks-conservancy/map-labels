# == Global project settings ===========================================

name:             GGNPC Labels
description:      ''
attribution:      'Map Data Â© OpenStreetMap'
bounds:           [-123.640, 36.791, -121.025, 38.719]
center:           [-122.5369, 37.8704, 13]
format:           png
interactivity:    false
minzoom:          10
maxzoom:          20
srs:              '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'
metatile:         4


# == Layer & Datasource defaults =======================================

_layer_default:   &layer
  'srs-name':     '900913'
  srs:            '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'

_pg_default:      &postgis
  type:           postgis
  dbname:         {{dbname}}
  host:           {{dbhost}}
  user:           {{dbuser}}
  password:       {{dbpassword}}
  port:           {{dbport}}
  geometry_field: way
  srid:           900913
  extent:         '-13763541.8416803, 4410014.78335954, -13472441.3732559, 4681500.2899002'
  srs:            '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'


# == Stylesheets =======================================================

Stylesheet:
  - map.mss
  - icons.mss
  - labels.mss


# == Layers ============================================================

Layer:

  # ---- Dual Carriageways ---------------------------------------------

  # select s.tags -> 'name', t.tags -> 'name'
  # from planet_osm_line s
  # left join planet_osm_line t
  #   on t.tags -> 'name' = s.tags -> 'name'
  #     AND ST_DWithin(t.way, s.way, 25)
  #     AND ST_Disjoint(t.way, s.way)
  # WHERE t.tags ? 'highway'
  #   AND s.tags ? 'highway'
  #   AND s.tags ? 'name'
  #   AND t.tags ? 'name';

  # - <<: *layer
  #   name: dual-carriageways
  #   id:   dual-carriageways
  #   status: off
  #   Datasource:
  #     <<: *postgis
  #     table: >
  #       ( 
  #       SELECT * FROM (
  #       SELECT tags -> 'name' AS name,
  #         way
  #       FROM planet_osm_line ms
  #       WHERE osm_id IN (
  #           SELECT UNNEST(ids)
  #           FROM (
  #             SELECT ARRAY_AGG(osm_id) AS ids
  #             FROM planet_osm_line
  #             WHERE way && !bbox!
  #               AND tags ?& ARRAY['highway', 'name']
  #               GROUP BY tags -> 'name'
  #               HAVING COUNT(osm_id) > 1
  #           ) AS _
  #         )
  #         AND (
  #           SELECT COUNT(osm_id) AS count
  #           FROM planet_osm_line n
  #           WHERE way && !bbox!
  #             AND tags ? 'highway'
  #             AND tags -> 'name' = ms.tags -> 'name'
  #             AND ST_DWithin(ms.way, n.way, 25)
  #             AND ST_Disjoint(ms.way, n.way)
  #         ) > 1
  #       ORDER BY tags -> 'name'
  #       ) AS _
  #       WHERE zoom(!scale_denominator!) >= 15
  #       ) AS _

  # ---- GGNRA Unit Names ----------------------------------------------

  - <<: *layer
    name: unit_labels
    id:   unit_labels
    status: on
    properties:
      minzoom: 11
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: >
        (
          SELECT name, geom
          FROM locations
          WHERE geom && !bbox!
            AND type='Park'
        ) AS _

  # ---- Recreational Opportunities (OSM) ------------------------------

  # - <<: *layer
  #   name: sports
  #   id:   sports
  #   status: off
  #   Datasource:
  #     <<: *postgis
  #     table: >
  #       (
  #         SELECT * FROM (
  #           SELECT COALESCE(tags -> 'sport', tags -> 'leisure') AS sport, way
  #           FROM planet_osm_point
  #           WHERE way && !bbox!
  #             AND tags ?| ARRAY['sport', 'leisure']
  #             AND (
  #               string_to_array(tags -> 'sport', ';') && ARRAY['surfing',
  #                                                              'kiteboarding',
  #                                                              'windsurfing',
  #                                                              'paddleboarding'
  #                                                              'free_flying']
  #               OR
  #               string_to_array(tags -> 'leisure', ';') && ARRAY['fishing'])
  #         UNION
  #           SELECT COALESCE(tags -> 'sport', tags -> 'leisure') AS sport, way
  #           FROM planet_osm_polygon
  #           WHERE way && !bbox!
  #             AND tags ?| ARRAY['sport', 'leisure']
  #             AND (
  #               string_to_array(tags -> 'sport', ';') && ARRAY['surfing',
  #                                                              'kiteboarding',
  #                                                              'windsurfing',
  #                                                              'paddleboarding'
  #                                                              'free_flying']
  #               OR
  #               string_to_array(tags -> 'leisure', ';') && ARRAY['fishing'])
  #         ) AS x
  #       ) AS x

  # ---- GGNPC Locations -----------------------------------------------

  - <<: *layer
    name: locations
    id:   locations
    status: on
    properties:
      minzoom: 14
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: >
        (
          SELECT * FROM (
            SELECT name, type, geom,
              (CASE
              WHEN type = 'Park' THEN 1
              WHEN type = 'Visitor Center' THEN 2
              WHEN type = 'Trailhead' THEN 3
              WHEN type = 'Site of Interest' THEN 4
              WHEN type = 'Cafe' THEN 5
              WHEN type = 'Overlook' THEN 6
              WHEN type = 'Campground' THEN 8

              WHEN type = 'Beach' THEN 8
              WHEN type = 'Meeting Place' THEN 9
              WHEN type = 'Restroom' THEN 10
              WHEN type = 'Parking Lot' THEN 11
              WHEN type = 'Restoration Site' THEN 12
              WHEN type = 'Access' THEN 13
              WHEN type = 'Building' THEN 14
              WHEN type = 'Water Fountain' THEN 15
              WHEN type = 'Bike Rack' THEN 16
              ELSE 100
              END) AS priority
            FROM locations
            WHERE geom && !bbox!
              AND type NOT IN ('Park')
              AND type IN ('Campground', 'Visitor Center', 'Site of Interest', 'Cafe', 'Overlook', 'Water Fountain', 'Parking Lot')
          UNION
            SELECT name,
              type,
              geom,
              10 AS priority
            FROM ggnra_restrooms
            WHERE geom && !bbox!
              AND type = 'Restroom'
          UNION
            SELECT regexp_replace(name, '(\s-|:)\s+', E'\n') AS name,
              'Trailhead' AS type,
              geom,
              3 AS priority
            FROM trailheads
            WHERE geom && !bbox!
          ) AS _
          ORDER BY priority
        ) AS x

  # ---- Trail Labels --------------------------------------------------

  - <<: *layer
    name: trail-labels
    id:   trail-labels
    status: on
    properties:
      minzoom: 14
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: >
        (
          SELECT *
          FROM trails
          WHERE geom && !bbox!
        ) AS _

  # ---- Battery Labels ------------------------------------------------

  - <<: *layer
    name: battery-labels
    id:   battery-labels
    status: on
    properties:
      minzoom: 18
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: >
        (
          SELECT name, geom
          FROM ggnra_buildings
          WHERE geom && !bbox!
            AND name ILIKE 'battery %'
        ) AS _

  # ---- Lighthouses ---------------------------------------------------

  # - <<: *layer
  #   name: lighthouses
  #   id:   lighthouses
  #   status: off
  #   Datasource:
  #     <<: *postgis
  #     table: >
  #       (
  #         SELECT tags -> 'name', way
  #         FROM planet_osm_point
  #         WHERE way && !bbox!
  #           AND tags @> 'man_made=>lighthouse'
  #           AND zoom(!scale_denominator!) >= 14
  #       ) AS _

  # ---- Places --------------------------------------------------------

  - <<: *layer
    name: places_z12minus
    id:   places_z12minus
    class: places
    status: on
    properties:
      maxzoom: 12
    Datasource:
      <<: *postgis
      table: >
        (
          SELECT *
          FROM 
          (
            SELECT DISTINCT ON (name) name, way, place, population,
                   priority, size
            FROM
            (
              SELECT (string_to_array(tags -> 'name', ';'))[1] AS name,
                     way,
                     tags -> 'place' AS place,
                     COALESCE(replace(tags -> 'population', ',', '')::numeric, 0) AS population,
                     CASE
                      WHEN tags -> 'place' IN ('city') THEN 1
                      WHEN tags -> 'place' IN ('suburb') THEN 2
                      WHEN tags -> 'place' IN ('town') THEN 3
                      WHEN tags -> 'place' IN ('neighbourhood') THEN 4
                      WHEN tags -> 'place' IN ('village') THEN 5
                      ELSE 10
                    END AS priority,
                    1 as size
              FROM planet_osm_point
              WHERE way && !bbox!
                AND tags ?& ARRAY['name', 'place']
                AND tags -> 'place' IN ('city', 'town')
                AND tags -> 'name' NOT LIKE '%Home%'
                AND tags -> 'name' NOT LIKE '%Trailer Court%'
                AND tags -> 'name' NOT IN ('Doelger City')
                AND NOT tags ? 'historic'
            UNION
              SELECT (string_to_array(tags -> 'name', ';'))[1] AS name,
                     way,
                     tags -> 'place' AS place,
                     way_area size,
              COALESCE(replace(tags -> 'population', ',', '')::numeric, 0) AS population,
              CASE
                WHEN tags->'place' IN ('city') THEN 1
                WHEN tags->'place' IN ('suburb') THEN 2
                WHEN tags->'place' IN('town') THEN 3
                WHEN tags->'place' IN ('neighbourhood') THEN 4
                WHEN tags->'place' IN ('village') THEN 5
                ELSE 10
              END AS priority
              FROM planet_osm_polygon
              WHERE way && !bbox!
                AND tags ?& ARRAY['name', 'place']
                AND tags -> 'place' IN ('city','town','village')
                AND tags -> 'name' NOT LIKE '%Home%'
                AND tags -> 'name' NOT LIKE '%Trailer Court%'
            ) AS stuff
            ORDER BY name
          ) AS stuff
          ORDER BY priority ASC, population DESC, size DESC
        ) AS places

  - <<: *layer
    name: places_z13plus
    id:   places_z13plus
    class: places
    status: on
    properties:
      minzoom: 13
    Datasource:
      <<: *postgis
      table: >
        (
          SELECT *
          FROM 
          (
            SELECT DISTINCT ON (name) name, way, place, population,
                   priority, size
            FROM
            (
              SELECT (string_to_array(tags -> 'name', ';'))[1] AS name,
                     way,
                     tags -> 'place' AS place,
                     COALESCE(replace(tags -> 'population', ',', '')::numeric, 0) AS population,
                     CASE
                      WHEN tags -> 'place' IN ('city') THEN 1
                      WHEN tags -> 'place' IN ('suburb') THEN 2
                      WHEN tags -> 'place' IN ('town') THEN 3
                      WHEN tags -> 'place' IN ('neighbourhood') THEN 4
                      WHEN tags -> 'place' IN ('village') THEN 5
                      ELSE 10
                    END AS priority,
                    1 as size
              FROM planet_osm_point
              WHERE way && !bbox!
                AND tags ?& ARRAY['name', 'place']
                -- island is intentionally omitted
                AND tags -> 'place' IN ('city','town','village','suburb','neighbourhood','hamlet','islet','locale','locality')
                AND tags -> 'name' NOT LIKE '%Home%'
                AND tags -> 'name' NOT LIKE '%Trailer Court%'
                AND tags -> 'name' NOT IN ('Doelger City')
                AND NOT tags ? 'historic'
            UNION
              SELECT (string_to_array(tags -> 'name', ';'))[1] AS name,
                     way,
                     tags -> 'place' AS place,
                     way_area size,
              COALESCE(replace(tags -> 'population', ',', '')::numeric, 0) AS population,
              CASE
                WHEN tags->'place' IN ('city') THEN 1
                WHEN tags->'place' IN ('suburb') THEN 2
                WHEN tags->'place' IN('town') THEN 3
                WHEN tags->'place' IN ('neighbourhood') THEN 4
                WHEN tags->'place' IN ('village') THEN 5
                ELSE 10
              END AS priority
              FROM planet_osm_polygon
              WHERE way && !bbox!
                AND tags ?& ARRAY['name', 'place']
                -- island is intentionally omitted
                AND tags -> 'place' IN ('city','town','village','suburb','neighbourhood','hamlet','islet','locale','locality')
                AND tags -> 'name' NOT LIKE '%Home%'
                AND tags -> 'name' NOT LIKE '%Trailer Court%'
            ) AS stuff
            ORDER BY name
          ) AS stuff
          ORDER BY priority ASC, population DESC, size DESC
        ) AS places

  # ---- CPAD Labels ---------------------------------------------------

  # - <<: *layer
  #   name: cpad-labels
  #   id:   cpad-labels
  #   status: off
  #   Datasource:
  #     <<: *postgis
  #     geometry_field: geom
  #     table: >
  #       (
  #         SELECT unit_name AS name, gis_acres, geom
  #         FROM cpad_superunits
  #         WHERE geom && !bbox!
  #           AND unit_name IS NOT NULL
  #           AND gis_acres > 5
  #         ORDER BY gis_acres DESC
  #       ) AS cpad

  # ---- Water Labels --------------------------------------------------

  # - <<: *layer
  #   name: water-labels
  #   id:   water-labels
  #   status: off
  #   Datasource:
  #     <<: *postgis
  #     geometry_field: geom
  #     table: >
  #       (
  #         SELECT * FROM (
  #           SELECT gnis_name AS name, ftype, geom, areasqkm
  #           FROM nhdwaterbody
  #           WHERE geom && !bbox!
  #             AND gnis_name IS NOT NULL
  #             AND ftype IN (
  #               39000, -- Lake/Pond
  #               39004, -- Lake/Pond: Hydrographic Category = Perennial
  #               39009, -- Lake/Pond: Hydrographic Category = Perennial; Stage = Average Water Elevation
  #               39010, -- Lake/Pond: Hydrographic Category = Perennial; Stage = Normal Pool
  #               39011, -- Lake/Pond: Hydrographic Category = Perennial; Stage = Date of Photography
  #               39012, -- Lake/Pond: Hydrographic Category = Perennial; Stage = Spillway Elevation

  #               43600, -- Reservoir
  #               43601, -- Reservoir: Reservoir Type = Aquaculture
  #               43603, -- Reservoir: Reservoir Type = Decorative Pool
  #               43604, -- Reservoir: Reservoir Type = Tailings Pond; Construction Material = Earthen
  #               43605, -- Reservoir: Reservoir Type = Tailings Pond
  #               43606, -- Reservoir: Reservoir Type = Disposal
  #               43607, -- Reservoir: Reservoir Type = Evaporator
  #               43608, -- Reservoir: Reservoir Type = Swimming Pool
  #               43609, -- Reservoir: Reservoir Type = Cooling Pond
  #               43610, -- Reservoir: Reservoir Type = Filtration Pond
  #               43611, -- Reservoir: Reservoir Type = Settling Pond
  #               43612, -- Reservoir: Reservoir Type = Sewage Treatment Pond
  #               43613, -- Reservoir: Reservoir Type = Water Storage; Construction Material = Nonearthen
  #               43614, -- Reservoir: Reservoir Type = Water Storage; Construction Material = Earthen; Hydrographic Category = Intermittent
  #               43615, -- Reservoir: Reservoir Type = Water Storage; Construction Material = Earthen; Hydrographic Category = Perennial
  #               43617, -- Reservoir: Reservoir Type = Water Storage
  #               43618, -- Reservoir: Construction Material = Earthen
  #               43619, -- Reservoir: Construction Material = Nonearthen
  #               43621, -- Reservoir: Reservoir Type = Water Storage; Hydrographic Category = Perennial
  #               43623, -- Reservoir: Reservoir Type = Evaporator; Construction Material = Earthen
  #               43624, -- Reservoir; Reservoir Type = Treatment
  #               43625, -- Reservoir: Reservoir Type = Disposal; Construction Material = Earthen
  #               43626, -- Reservoir: Reservoir Type = Disposal; Construction Material = Nonearthen

  #               46600, -- Swamp/Marsh
  #               46601, -- Swamp/Marsh: Hydrographic Category = Intermittent
  #               46602, -- Swamp/Marsh: Hydrographic Category = Perennial

  #                -1
  #             )
  #         UNION
  #           SELECT gnis_name AS name, ftype, geom, areasqkm
  #           FROM nhdarea
  #           WHERE geom && !bbox!
  #             AND gnis_name IS NOT NULL
  #             AND ftype IN (
  #               33600, -- Canal/Ditch
  #               33601, -- Canal/Ditch: Canal/Ditch Type = Aqueduct

  #               36400, -- Foreshore

  #               45500, -- Spillway

  #               46000, -- Stream/River
  #               46006, -- Stream/River: Hydrographic Category = Perennial

  #                -1
  #             )
  #         ) AS water
  #         ORDER BY areasqkm DESC
  #       ) AS labels

  # ---- Bay Labels ----------------------------------------------------

  - <<: *layer
    name: bay
    id:   bay
    status: on
    Datasource:
      <<: *postgis
      table: >
        (
          SELECT tags -> 'name' AS name, way
          FROM planet_osm_point
          WHERE way && !bbox!
            AND tags @> 'natural=>bay'
            AND tags ? 'name'
            AND (zoom(!scale_denominator!) >= 13
              OR tags -> 'name' IN ('San Pablo Bay', 'San Francisco Bay', 'Gulf of the Farallones')
            )
        ) AS bay

  # ---- Road Labels ---------------------------------------------------

  - <<: *layer
    name: highway-labels_z13minus
    id:   highway-labels_z13minus
    class: highway-labels
    status: on
    properties:
      maxzoom: 13
    Datasource:
      <<: *postgis
      table: >
        (
          SELECT tags -> 'highway' AS highway,
            (string_to_array(tags -> 'name', ';'))[1] AS name,
            way,
            (CASE
            WHEN tags -> 'highway' IN ('motorway') THEN 1
            WHEN tags -> 'highway' IN ('trunk') THEN 2
            WHEN tags -> 'highway' IN ('primary') THEN 3
            WHEN tags -> 'highway' IN ('secondary') THEN 4
            WHEN tags -> 'highway' IN ('tertiary') THEN 5
            WHEN tags -> 'highway' IN ('residential', 'unclassified', 'service', 'road') THEN 6
            ELSE 100
            END) priority
          FROM planet_osm_line
          WHERE way && !bbox!
            AND tags -> 'highway' IN ('motorway', 'trunk', 'primary')
            AND (NOT tags ? 'access' OR tags -> 'access' NOT IN ('no', 'false'))
            AND NOT tags ?| ARRAY['bridge', 'tunnel']
          ORDER BY priority ASC
        ) AS _

  - <<: *layer
    name: highway-labels_z14plus
    id:   highway-labels_z14plus
    class: highway-labels
    status: on
    properties:
      minzoom: 14
    Datasource:
      <<: *postgis
      table: >
        (
          SELECT tags -> 'highway' AS highway,
            (string_to_array(tags -> 'name', ';'))[1] AS name,
            way,
            (CASE
            WHEN tags -> 'highway' IN ('motorway') THEN 1
            WHEN tags -> 'highway' IN ('trunk') THEN 2
            WHEN tags -> 'highway' IN ('primary') THEN 3
            WHEN tags -> 'highway' IN ('secondary') THEN 4
            WHEN tags -> 'highway' IN ('tertiary') THEN 5
            WHEN tags -> 'highway' IN ('residential', 'unclassified', 'service', 'road') THEN 6
            ELSE 100
            END) priority
          FROM planet_osm_line
          WHERE way && !bbox!
            AND tags -> 'highway' IN ('motorway', 'trunk', 'primary',
                                      'secondary', 'tertiary', 'residential',
                                      'unclassified', 'service', 'road')
            AND (NOT tags ? 'access' OR tags -> 'access' NOT IN ('no', 'false'))
            AND NOT tags ?| ARRAY['bridge', 'tunnel']
          ORDER BY priority ASC
        ) AS _

  # ---- Map border ----------------------------------------------------

  - <<: *layer
    name: border
    id:   border
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: >
        (
          SELECT ST_MakeEnvelope(-13763541.8416803, 4410014.78335954, -13472441.3732559, 4681500.2899002, 900913) geom
        ) AS _

